<project name="Retrieve and Deploy SFDC metadata" default="sfdcDetails" basedir="." xmlns:sf="antlib:com.salesforce">
    <property file="${basedir}/environments/${environment}.properties"/>
    <condition property="sf.username" value=""> <not> <isset property="sf.username"/> </not> </condition>
    <condition property="sf.password" value=""> <not> <isset property="sf.password"/> </not> </condition>
    <condition property="sf.sessionId" value=""> <not> <isset property="sf.sessionId"/> </not> </condition>
    <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
        <classpath>
            <pathelement location="${basedir}/ant-salesforce.jar" />        	
        </classpath>
    </taskdef>
	<property name="passwordToken" value="${sf.password}${sf.token}"/>
	<property name="srcDir" value="${basedir}/src" />
	<property name="srcDirCopy" value="${basedir}/src-copy" />
	
	<target name="sfdcDetails">
    <echo>Base Dir: ${basedir}</echo>
		<echo>Environment: ${environment}</echo>
		<echo>Username: ${sf.username}</echo>
		<echo>Server url: ${sf.serverurl}</echo>
	</target>

  <target name="fetchMetadata" depends="sfdcDetails,retrieveMetadata,copyMetadata">
  </target>

    <target name="retrieveMetadata">
      <echo level="info">Retrieving the server's version of code ${sf.username} ${sf.serverurl}</echo>
      <!-- Retrieve the contents into a temp src directory -->      
      <delete dir="${srcDir}"/>
      <mkdir dir="${srcDirCopy}"/>
      <sf:retrieve
        retrieveTarget="${srcDirCopy}"
        username="${sf.username}"
        password="${passwordToken}"
        serverurl="${sf.serverurl}"
        unpackaged="package.xml"/>
    </target>
    
    <!-- Remove unwanted metadata specified on this target -->      	
  	<target name="copyMetadata">
  		<echo>Copying source to ${srcDir} to exclude unwanted files</echo>
      <mkdir dir="${srcDir}"/>
      <copy todir="${srcDir}">
  			<fileset dir="${srcDirCopy}">
          <!-- example for removing elements -->
          <exclude name="workflows/Account.workflow"/>    
          <exclude name="settings/Search.settings"/>        
        </fileset>
  		</copy>
  		<!-- example to remove an element from profile using regex 
    <replaceregexp match="&lt;applicationVisibilities&gt;\s*&lt;application&gt;standard__Insights&lt;/application&gt;\s*
&lt;default&gt;false&lt;/default&gt;\s*
&lt;visible&gt;true&lt;/visible&gt;\s*
      &lt;/applicationVisibilities&gt;\s*" replace="" flags="gm" byline="false">
      <fileset dir="${srcCopyDir}/profiles" includes="*.profile"/>
    </replaceregexp> -->
      <!-- remove the temp srcDir copy -->
      <delete dir="${srcDirCopy}"/>
    </target>
	<!-- deploy the changes to target org -->	
	<target name="deployMetadata" depends="sfdcDetails">
      <echo level="info">Performing the deploy</echo>
      <sf:deploy
        username="${sf.username}"
        password="${passwordToken}"
        serverurl="${sf.serverurl}"
        deployRoot="${srcDir}"
        pollWaitMillis="${sf.pollWaitMillis}"
        maxPoll="${sf.maxPoll}"/>
    </target>
	  <!-- Run test on the to target org -->	
    <target name="deployEmptyCheckOnly" depends="sfdcDetails">
      <echo level="info">Testing the deploy</echo>
      <sf:deploy
	      checkOnly="true"
          logType="Debugonly"
          username="${sf.username}"
          password="${passwordToken}"
          serverurl="${sf.serverurl}"
          deployRoot="${srcDir}"
          pollWaitMillis="${sf.pollWaitMillis}"
          maxPoll="${sf.maxPoll}"
		  runAllTests="true" />
    </target>
	
</project>